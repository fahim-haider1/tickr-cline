// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id // This will be Clerk's user ID
  email     String   @unique
  name      String?
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ownedWorkspaces      Workspace[]       @relation("WorkspaceOwner")
  workspaceMemberships WorkspaceMember[]
  assignedTasks        Task[]            @relation("TaskAssignee")

  @@map("users")
}

model Workspace {
  id          String   @id @default(cuid())
  name        String
  description String?
  ownerId     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  owner   User              @relation("WorkspaceOwner", fields: [ownerId], references: [id])
  members WorkspaceMember[]
  columns Column[]

  @@map("workspaces")
}

model WorkspaceMember {
  id          String        @id @default(cuid())
  userId      String
  workspaceId String
  role        WorkspaceRole @default(MEMBER)
  joinedAt    DateTime      @default(now())

  user      User      @relation(fields: [userId], references: [id])
  workspace Workspace @relation(fields: [workspaceId], references: [id])

  @@unique([userId, workspaceId])
  @@map("workspace_members")
}

enum WorkspaceRole {
  ADMIN
  MEMBER
  VIEWER
}

model Column {
  id          String   @id @default(cuid())
  name        String
  order       Int
  workspaceId String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  workspace Workspace @relation(fields: [workspaceId], references: [id])
  tasks     Task[]

  @@map("columns")
}

model Task {
  id          String       @id @default(cuid())
  title       String
  description String?
  priority    TaskPriority @default(MEDIUM)
  order       Int
  dueDate     DateTime?
  assigneeId  String?
  columnId    String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  assignee User?     @relation("TaskAssignee", fields: [assigneeId], references: [id])
  column   Column    @relation(fields: [columnId], references: [id])
  subtasks Subtask[]

  @@map("tasks")
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
}

model Subtask {
  id        String   @id @default(cuid())
  title     String
  completed Boolean  @default(false)
  order     Int
  taskId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  task Task @relation(fields: [taskId], references: [id])

  @@map("subtasks")
}
